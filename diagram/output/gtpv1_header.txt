protocol name: GtpV1Layer;
gtpv1_header
pragma pack(push, 1)
	/**
	 * @struct gtpv1_header
	 * GTP v1 common message header
	 */
	struct gtpv1_header
	{
#if (BYTE_ORDER == LITTLE_ENDIAN)
		/** A 1-bit value that states whether there is a N-PDU number optional field */
		uint8_t npduNumberFlag:1,
		/** A 1-bit value that states whether there is a Sequence Number optional field */
		sequenceNumberFlag:1,
		/** A 1-bit value that states whether there is an extension header optional field */
		extensionHeaderFlag:1,
		/** Reserved bit */
		reserved:1,
		/** A 1-bit value that differentiates GTP (value 1) from GTP' (value 0) */
		protocolType:1,
		/** GTP version */
		version:3;
#else
		/** GTP version */
		uint8_t version:3,
		/** A 1-bit value that differentiates GTP (value 1) from GTP' (value 0) */
		protocolType:1,
		/** Reserved bit */
		reserved:1,
		/** A 1-bit value that states whether there is an extension header optional field */
		extensionHeaderFlag:1,
		/** A 1-bit value that states whether there is a Sequence Number optional field */
		sequenceNumberFlag:1,
		/** A 1-bit value that states whether there is a N-PDU number optional field */
		npduNumberFlag:1;
#endif
		/** An 8-bit field that indicates the type of GTP message */
		uint8_t messageType;

		/** A 16-bit field that indicates the length of the payload in bytes (rest of the packet following the mandatory 8-byte GTP header). Includes the optional fields */
		uint16_t messageLength;

		/** Tunnel endpoint identifier - A 32-bit(4-octet) field used to multiplex different connections in the same GTP tunnel */
		uint32_t teid;
	};

#pragma pack
